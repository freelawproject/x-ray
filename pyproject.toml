[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
]

[project]
name = "x-ray"
version = "0.3.4"
description = "A library and microservice to find bad redactions in PDFs"
authors = [{ name = "Free Law Project", email = "info@free.law" }]
requires-python = ">=3.9"
readme = "README.md"
license = "BSD-2-Clause"
keywords = [
    "legal",
    "courts",
    "redactions",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "PyMuPDF==1.26.1",
    "requests>=2.26.0",
]

urls.Homepage = "https://free.law/projects/x-ray"
urls.Repository = "https://github.com/freelawproject/x-ray"
urls.Documentation = "https://github.com/freelawproject/x-ray/blob/main/README.md"
urls."Organisation Homepage" = "https://free.law/"
urls."Change Log" = "https://github.com/freelawproject/x-ray/blob/main/CHANGES.md"
urls.Issues = "https://github.com/freelawproject/x-ray/issues"
urls.Funding = "https://www.courtlistener.com/donate/?referrer=pypi-xray"

[project.scripts]
xray = "xray.__init__:cli"

[dependency-groups]
dev = [
    "mypy>=0.910",
    "wheel>=0.38.2",
    "pre-commit>=3.3.3",
    "ipython>=8.12.0",
    "types-requests>=2.26.0",
]

[tool.setuptools]
packages = [ "xray" ]

[tool.ruff]
line-length = 79
lint.select = [
  # flake8-bugbear
  "B",
  # flake8-comprehensions
  "C4",
  # pycodestyle
  "E",
  # Pyflakes errors
  "F",
  # isort
  "I",
  # flake8-simplify
  "SIM",
  # flake8-tidy-imports
  "TID",
  # pyupgrade
  "UP",
  # Pyflakes warnings
  "W",
]
lint.ignore = [
  # flake8-bugbear opinionated rules
  "B9",
  # line-too-long
  "E501",
  # suppressible-exception
  "SIM105",
  # if-else-block-instead-of-if-exp
  "SIM108",
]
